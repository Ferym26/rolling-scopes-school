const checklist = () => {
	const taskArr = []; // массив объектов с заданиями
	// список заданий со значениями самооценки
	const taskList = [
		{
			task: 'Вёрстка валидная',
			value: 10,
		},
		{
			task: 'Вёрстка семантическая. В коде страницы присутствуют следующие элементы (указано минимальное количество, может быть больше)',
			value: null,
		},
		{
			task: '<header>, <main>, <footer>',
			value: 2,
		},
		{
			task: 'семь элементов <section> (по количеству секций)',
			value: 2,
		},
		{
			task: 'только один заголовок <h1>',
			value: 2,
		},
		{
			task: 'семь заголовков <h2> (по количеству секций) +2',
			value: 2,
		},
		{
			task: 'шесть заголовков <h3> (по количеству карточек) +2',
			value: 2,
		},
		{
			task: 'два элемента <nav> (основная и вспомогательная панель навигации)',
			value: 2,
		},
		{
			task: 'три списка ul > li > a (основная и вспомогательная панель навигации, ссылки на соцсети)',
			value: 2,
		},
		{
			task: 'тринадцать кнопок button (четыре из них в секции Video, пять в секции Tickets, по две - стрелки слайдера и плейлиста)',
			value: 2,
		},
		{
			task: 'три тега input type="radio" (в секции Tickets)',
			value: 2,
		},
		{
			task: 'два тега input type="number"(в секции Tickets)',
			value: 2,
		},
		{
			task: 'два тега input type="range" (громкось и прогрес-бар видео)',
			value: 2,
		},
		{
			task: 'для всех элементов <img> указан обязательный атрибут alt',
			value: 2,
		},
		{
			task: 'Вёрстка соответствует макету',
			value: null,
		},
		{
			task: 'блок <header>',
			value: 5,
		},
		{
			task: 'секция Welcome',
			value: 5,
		},
		{
			task: 'секция Visiting',
			value: 5,
		},
		{
			task: 'секция Explore',
			value: 5,
		},
		{
			task: 'секция Video',
			value: 5,
		},
		{
			task: 'секция Gallery',
			value: 5,
		},
		{
			task: 'секция Tickets',
			value: 5,
		},
		{
			task: 'секция Contacts',
			value: 5,
		},
		{
			task: 'блок <footer>',
			value: 5,
		},
		{
			task: 'Форма покупки билетов',
			value: null,
		},
		{
			task: 'форма плавно выдвигается слева при открытии и плавно возвращается назад при закрытии. В открытом состоянии под формой есть полупрозрачный overlay, который занимает весь экран. Форма и overlay прокручиваются вместе со страницей',
			value: 2,
		},
		{
			task: 'форма открывается при клике по кнопке Buy Now в секции Tickets и закрывается кликом по иконке с крестиком в верхнем правом углу или кликом по overlay',
			value: 2,
		},
		{
			task: 'при вёрстке формы используются следующие элементы: form, input type="date", input type="time", input type="text", input type="email", input type="tel", input type="number", select',
			value: 8,
		},
		{
			task: 'вёрстка формы соответствует макету',
			value: 10,
		},
		{
			task: 'Требования к css',
			value: null,
		},
		{
			task: 'добавлен favicon',
			value: 2,
		},
		{
			task: 'для построения сетки используются флексы или гриды',
			value: 2,
		},
		{
			task: 'при уменьшении масштаба страницы браузера вёрстка размещается по центру, а не сдвигается в сторону',
			value: 2,
		},
		{
			task: 'фоновый цвет каждого блока и секции тянется на всю ширину страницы',
			value: 2,
		},
		{
			task: 'иконки добавлены в формате .svg. SVG может быть добавлен любым способом. Обращаем внимание на формат, а не на способ добавления',
			value: 2,
		},
		{
			task: 'расстояние между буквами, там, где это требуется по макету, регулируется css-свойством letter-spacing',
			value: 2,
		},
		{
			task: 'переключаются радиокнопки в блоке Tickets, одновременно может быть выбрана только одна кнопка',
			value: 2,
		},
		{
			task: 'в блоке Contacts правильно указанны ссылки на почту mailto и на телефон tel',
			value: 2,
		},
		{
			task: 'в футере добавлены ссылки на соцсети. Круглая граница вокруг иконок соцсетей выполнена при помощи css',
			value: 2,
		},
		{
			task: 'Интерактивность, реализуемая через css',
			value: null,
		},
		{
			task: 'плавная прокрутка по якорям',
			value: 5,
		},
		{
			task: 'параллакс',
			value: 5,
		},
		{
			task: 'при кликам по кнопке Discover the Louvre и карточкам секции Visiting открываются полноэкранные панорамы Google Street View встроенные в страницы вашего сайта при помощи iframe',
			value: 5,
		},
		{
			task: 'изменение стиля интерактивных элементов при наведении и клике',
			value: 10,
		},
		{
			task: 'Интерактивность, реализуемая через js',
			value: null,
		},
		{
			task: 'можно передвигать ползунки громкости и прогресс-бар видео, при этом цвет шкалы до и после ползунка отличается и соответствует макету',
			value: 2,
		},
		{
			task: 'кликами по кнопкам + и - в секции Tiskets можно менять количество билетов Basic и Senior',
			value: 0,
		},
		{
			task: 'кнопке "Book" в форме покупки билетов добавлен ripple-эффект',
			value: 0,
		},
		{
			task: 'при перезагрузке (обновлении) страницы картины в блоке Galery отображаются в рандомном порядке',
			value: 10,
		},
	];
	// конструктор строки задания
	function Row (task, value) {
		this.task = task;
		this.value = value;
	};
	// наполняем массив
	taskList.forEach((item) => {
		taskArr.push(new Row(item.task, item.value))
	});
	// считаем сумму значений
	const calcSumm = () => {
		let summ = 0;
		taskArr.forEach((item) => {
			summ += item.value
		})
		return summ
	};
	// выводим в консоль таблицу списка заданий и вычислинный результат
	console.table([...taskArr, new Row('Итого', calcSumm())]);
}

export default checklist
